{"ast":null,"code":"import { ActivatedRouteSnapshot, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { take, map, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/firebase.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../global\";\nimport * as i4 from \"@angular/fire/auth\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(firebaseService, router, globals, afAuth) {\n      this.firebaseService = firebaseService;\n      this.router = router;\n      this.globals = globals;\n      this.afAuth = afAuth;\n    }\n    canActivate(next, state) {\n      return this.afAuth.authState.pipe(take(1), map(user => !!user), tap(loggedIn => {\n        if (!loggedIn) {\n          console.log('Access Denied');\n          this.router.navigate(['/anmelden']);\n        }\n      }));\n      /*if ( this.globals.isLoggedIn !== true){\r\n        this.router.navigate(['anmelden']);\r\n      }\r\n      return true;*/\n    }\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.FirebaseService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.Globals), i0.ɵɵinject(i4.AngularFireAuth));\n  };\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/fire/auth\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"angular-password-strength-meter\";\nexport let UserManagementComponent = /*#__PURE__*/(() => {\n  class UserManagementComponent {\n    constructor(router, activatedRoute, authService) {\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.authService = authService;\n      this.ngUnsubscribe = new Subject();\n    }\n    ngOnInit() {\n      this.activatedRoute.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {\n        if (!params) {\n          this.router.navigate(['/home']);\n        }\n        this.mode = params['mode'];\n        this.actionCode = params['oodCode'];\n        switch (this.mode) {\n          case this.UserManagementActions.resetPassword:\n            {\n              // Verify the password reset code is valid.\n              this.authService.verifyPasswordResetCode(String(this.actionCode)).then(email => {\n                this.actionCodeChecked = true;\n              }).catch(e => {\n                // Invalid or expired action code. Ask user to try to reset the password\n                // again.\n                alert(e);\n                this.router.navigate(['/anmelden']);\n              });\n            }\n            break;\n          case this.UserManagementActions.recoverEmail:\n            {}\n            break;\n          case this.UserManagementActions.verifyEmail:\n            {}\n            break;\n          default:\n            {\n              console.log('query parameters are missing');\n              this.router.navigate(['/anmelden']);\n            }\n        }\n      });\n    }\n    ngOnDestroy() {\n      // End all subscriptions listening to ngUnsubscribe\n      // to avoid memory leaks.\n      this.ngUnsubscribe.next();\n      this.ngUnsubscribe.complete();\n    }\n    handleResetPassword() {\n      if (this.newPassword !== this.confirmPassword) {\n        alert('New Password and Confirm Password do not match');\n        return;\n      }\n      this.authService.confirmPasswordReset(this.actionCode, this.newPassword).then(resp => {\n        alert('New password has been saved');\n        this.router.navigate(['/anmelden']);\n      }).catch(e => {});\n    }\n  }\n  UserManagementComponent.ɵfac = function UserManagementComponent_Factory(t) {\n    return new (t || UserManagementComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AngularFireAuth));\n  };\n  UserManagementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserManagementComponent,\n    selectors: [[\"app-user-management\"]],\n    decls: 15,\n    vars: 3,\n    consts: [[1, \"main-wrapper\"], [1, \"container\"], [\"href\", \"\", 1, \"logo\"], [\"src\", \"../../assets/Logo-Rechteckig.png\"], [\"type\", \"text\", \"id\", \"newPassword\", \"name\", \"newPassword\", \"placeholder\", \"New Password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"password\"], [\"type\", \"text\", \"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"placeholder\", \"Confirm\\n      Password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primaer\", \"btn-lg\", 3, \"click\"]],\n    template: function UserManagementComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"header\")(2, \"div\", 1)(3, \"a\", 2);\n        i0.ɵɵelement(4, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h1\");\n        i0.ɵɵtext(6, \"Willkommen zur\\u00FCck bei Cookery\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\")(8, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function UserManagementComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.newPassword = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\")(10, \"password-strength-meter\", 5);\n        i0.ɵɵelementStart(11, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function UserManagementComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.confirmPassword = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"br\");\n        i0.ɵɵelementStart(13, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function UserManagementComponent_Template_button_click_13_listener() {\n          return ctx.handleResetPassword();\n        });\n        i0.ɵɵtext(14, \"Best\\u00E4tigen\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.newPassword);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"password\", ctx.newPassword);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.confirmPassword);\n      }\n    },\n    dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.PasswordStrengthMeterComponent]\n  });\n  return UserManagementComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Injectable, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { zxcvbn } from 'zxcvbn3';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nfunction PasswordStrengthMeterComponent_ng_container_3_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"small\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.feedback.warning, \" \");\n  }\n}\nfunction PasswordStrengthMeterComponent_ng_container_3_small_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const suggetion_r4 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(suggetion_r4);\n  }\n}\nfunction PasswordStrengthMeterComponent_ng_container_3_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"small\", 6);\n    ɵngcc0.ɵɵtemplate(1, PasswordStrengthMeterComponent_ng_container_3_small_2_ng_container_1_Template, 2, 1, \"ng-container\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.feedback.suggestions);\n  }\n}\nfunction PasswordStrengthMeterComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, PasswordStrengthMeterComponent_ng_container_3_small_1_Template, 2, 1, \"small\", 3);\n    ɵngcc0.ɵɵtemplate(2, PasswordStrengthMeterComponent_ng_container_3_small_2_Template, 2, 1, \"small\", 4);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.feedback.warning);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.feedback.suggestions && ctx_r0.feedback.suggestions.length > 0);\n  }\n}\nlet PasswordStrengthMeterService = /*#__PURE__*/(() => {\n  class PasswordStrengthMeterService {\n    constructor() {}\n    /**\n     *  this will return the password strength score in number\n     *  0 - too guessable\n     *  1 - very guessable\n     *  2 - somewhat guessable\n     *  3 - safely unguessable\n     *  4 - very unguessable\n     *\n     *  @param password - Password\n     */\n    score(password) {\n      const result = zxcvbn(password);\n      return result.score;\n    }\n    /**\n     * this will return the password strength score with feedback messages\n     * return type { score: number; feedback: { suggestions: string[]; warning: string } }\n     *\n     * @param password - Password\n     */\n    scoreWithFeedback(password) {\n      const result = zxcvbn(password);\n      return {\n        score: result.score,\n        feedback: result.feedback\n      };\n    }\n  }\n  PasswordStrengthMeterService.ɵfac = function PasswordStrengthMeterService_Factory(t) {\n    return new (t || PasswordStrengthMeterService)();\n  };\n  PasswordStrengthMeterService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: PasswordStrengthMeterService,\n    factory: PasswordStrengthMeterService.ɵfac\n  });\n  return PasswordStrengthMeterService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PasswordStrengthMeterComponent = /*#__PURE__*/(() => {\n  class PasswordStrengthMeterComponent {\n    constructor(passwordStrengthMeterService) {\n      this.passwordStrengthMeterService = passwordStrengthMeterService;\n      this.minPasswordLength = 8;\n      this.enableFeedback = false;\n      this.colors = [];\n      this.strengthChange = new EventEmitter();\n      this.passwordStrength = null;\n      this.feedback = null;\n      this.prevPasswordStrength = null;\n      this.defaultColours = ['darkred', 'orangered', 'orange', 'yellowgreen', 'green'];\n    }\n    ngOnInit() {}\n    ngOnChanges(changes) {\n      if (changes.password) {\n        this.calculatePasswordStrength();\n      }\n    }\n    calculatePasswordStrength() {\n      // TODO validation logic optimization\n      if (!this.password) {\n        this.passwordStrength = null;\n        this.feedback = null;\n      } else if (this.password && this.password.length < this.minPasswordLength) {\n        this.passwordStrength = 0;\n        this.feedback = null;\n      } else {\n        if (this.enableFeedback) {\n          const result = this.passwordStrengthMeterService.scoreWithFeedback(this.password);\n          this.passwordStrength = result.score;\n          this.feedback = result.feedback;\n        } else {\n          this.passwordStrength = this.passwordStrengthMeterService.score(this.password);\n          this.feedback = null;\n        }\n      }\n      // Only emit the passwordStrength if it changed\n      if (this.prevPasswordStrength !== this.passwordStrength) {\n        this.strengthChange.emit(this.passwordStrength);\n        this.prevPasswordStrength = this.passwordStrength;\n      }\n    }\n    getMeterFillColor(strength) {\n      if (!strength || strength < 0 || strength > 5) {\n        return this.colors[0] ? this.colors[0] : this.defaultColours[0];\n      }\n      return this.colors[strength] ? this.colors[strength] : this.defaultColours[strength];\n    }\n  }\n  PasswordStrengthMeterComponent.ɵfac = function PasswordStrengthMeterComponent_Factory(t) {\n    return new (t || PasswordStrengthMeterComponent)(ɵngcc0.ɵɵdirectiveInject(PasswordStrengthMeterService));\n  };\n  PasswordStrengthMeterComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PasswordStrengthMeterComponent,\n    selectors: [[\"password-strength-meter\"]],\n    inputs: {\n      minPasswordLength: \"minPasswordLength\",\n      enableFeedback: \"enableFeedback\",\n      colors: \"colors\",\n      password: \"password\"\n    },\n    outputs: {\n      strengthChange: \"strengthChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([PasswordStrengthMeterService]), ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 4,\n    consts: [[1, \"strength-meter\"], [1, \"strength-meter-fill\"], [4, \"ngIf\"], [\"class\", \"password-feedback\", 4, \"ngIf\"], [\"class\", \"password-suggetion\", 4, \"ngIf\"], [1, \"password-feedback\"], [1, \"password-suggetion\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function PasswordStrengthMeterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\")(1, \"div\", 0);\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, PasswordStrengthMeterComponent_ng_container_3_Template, 3, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵstyleProp(\"background\", ctx.getMeterFillColor(ctx.passwordStrength));\n        ɵngcc0.ɵɵattribute(\"data-strength\", ctx.passwordStrength);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.enableFeedback && ctx.feedback);\n      }\n    },\n    dependencies: [ɵngcc1.NgForOf, ɵngcc1.NgIf],\n    styles: [\"*[_ngcontent-%COMP%], [_ngcontent-%COMP%]:after, [_ngcontent-%COMP%]:before{box-sizing:border-box}.strength-meter[_ngcontent-%COMP%]{background:#ddd;border-radius:3px;height:3px;margin:10px auto;position:relative}.strength-meter[_ngcontent-%COMP%]:after, .strength-meter[_ngcontent-%COMP%]:before{background:transparent;border-color:#fff;border-style:solid;border-width:0 5px;content:\\\"\\\";display:block;height:inherit;position:absolute;width:calc(20% + 6px);z-index:10}.strength-meter[_ngcontent-%COMP%]:before{left:calc(20% - 4px)}.strength-meter[_ngcontent-%COMP%]:after{right:calc(20% - 4px)}.strength-meter-fill[_ngcontent-%COMP%]{background:transparent;border-radius:inherit;height:inherit;position:absolute;transition:width .5s ease-in-out,background .25s;width:0}.strength-meter-fill[data-strength=\\\"0\\\"][_ngcontent-%COMP%]{background:#8b0000;width:20%}.strength-meter-fill[data-strength=\\\"1\\\"][_ngcontent-%COMP%]{background:#ff4500;width:40%}.strength-meter-fill[data-strength=\\\"2\\\"][_ngcontent-%COMP%]{background:orange;width:60%}.strength-meter-fill[data-strength=\\\"3\\\"][_ngcontent-%COMP%]{background:#9acd32;width:80%}.strength-meter-fill[data-strength=\\\"4\\\"][_ngcontent-%COMP%]{background:green;width:100%}.password-feedback[_ngcontent-%COMP%], .password-suggetion[_ngcontent-%COMP%]{color:#6c757d!important;display:block;font-size:70%;font-weight:400;margin-top:.25rem}\"]\n  });\n  return PasswordStrengthMeterComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PasswordStrengthMeterModule = /*#__PURE__*/(() => {\n  class PasswordStrengthMeterModule {}\n  PasswordStrengthMeterModule.ɵfac = function PasswordStrengthMeterModule_Factory(t) {\n    return new (t || PasswordStrengthMeterModule)();\n  };\n  PasswordStrengthMeterModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: PasswordStrengthMeterModule\n  });\n  PasswordStrengthMeterModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  return PasswordStrengthMeterModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PasswordStrengthMeterModule, {\n    declarations: function () {\n      return [PasswordStrengthMeterComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [PasswordStrengthMeterComponent];\n    }\n  });\n})();\n\n/*\n * Public API Surface of password-strength-meter\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PasswordStrengthMeterComponent, PasswordStrengthMeterModule, PasswordStrengthMeterService };\n\n//# sourceMappingURL=angular-password-strength-meter.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}